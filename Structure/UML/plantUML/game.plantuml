@startuml

title __GAME's Class Diagram__\n

  namespace inf112.skeleton.app {
    namespace game {
      class inf112.skeleton.app.game.GameClient {
          + name : String
          + GameClient()
          + drawCards()
          + registerChosenCards()
          + setMap()
          + updateMap()
      }
    }
  }
  

  namespace inf112.skeleton.app {
    namespace game {
      class inf112.skeleton.app.game.GameHost {
          + clientPlayers : HashMap<Integer, PlayerToken>
          + isShowingCards : boolean
          - cardPlayerTokenMap : HashMap<Card, PlayerToken>
          - cardsPerPlayerTurn : List<List<Card>>
          - cardsProcessedPerRound : int
          - currentCardListBeingProcessed : List<Card>
          - currentCardRound : int
          - pauseBetweenEachCardProcess : long
          - timeSinceLastCardProcessed : long
          + GameHost()
          + allCardsReady()
          + checkCards()
          + drawCards()
          + endOfTurn()
          + handleSingleCardRound()
          + initializeHostPlayerToken()
          + initializePlayerPos()
          + registerChosenCards()
          + resolveCard()
          + setMap()
          + updateMap()
          + wrapper()
          - getNthSelectionFromEachPlayer()
          - handleSinglePlayerCard()
          - movePlayer()
          - processCards()
          - resetCardDelayVariables()
          - resetPlayerTokens()
      }
    }
  }
  

  namespace inf112.skeleton.app {
    namespace game {
      abstract class inf112.skeleton.app.game.GamePlayer {
          + chosenCards : ArrayList<Card>
          + discard : ArrayList<Card>
          + hand : ArrayList<Card>
          + newCardsDelivered : boolean
          # deck : ArrayList<Card>
          + GamePlayer()
          + chooseCards()
          {abstract} + drawCards()
          + drawCardsFromDeck()
          {abstract} + registerChosenCards()
          {abstract} + setMap()
          {abstract} + updateMap()
      }
    }
  }
  

  namespace inf112.skeleton.app {
    namespace game {
      enum PLAYERSTATE {
        NONE
        PICKING_CARDS
        SENDING_CARDS
      }
    }
  }
  

  inf112.skeleton.app.game.GameClient -up-|> inf112.skeleton.app.game.GamePlayer
  inf112.skeleton.app.game.GameClient o-- inf112.skeleton.app.network.NetworkClient : client
  inf112.skeleton.app.game.GameHost -up-|> inf112.skeleton.app.game.GamePlayer
  inf112.skeleton.app.game.GameHost o-- inf112.skeleton.app.network.NetworkHost : host
  inf112.skeleton.app.game.GameHost o-- inf112.skeleton.app.libgdx.Map : map
  inf112.skeleton.app.game.GamePlayer o-- inf112.skeleton.app.game.GamePlayer.PLAYERSTATE : state
  inf112.skeleton.app.game.GamePlayer +-down- inf112.skeleton.app.game.GamePlayer.PLAYERSTATE


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
